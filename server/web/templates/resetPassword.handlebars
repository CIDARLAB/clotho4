{{> nav}}
<section class="hero">
    <div class="hero-body" style="padding: 0rem 0rem;">
        <div class="notification" id="alert" style="visibility: hidden; margin-bottom: 0rem; text-align: center; font-size: 125%; padding-top: .5rem; padding-bottom: .5rem">Success!</div>
        <div class="container">
            <h1 class="title">Reset Password</h1>
        </div>
        <div class="field">
            <form id="reset">
                <label class="label">Key</label>
                <input class="input"  id="key" type="text" placeholder="Key">
                <label class="label">Email</label>
                <input class="input"  id="email" type="email" placeholder="Email">
                <label class="label">Password</label>
                <input class="input"  id="password" type="password" placeholder="Password">
                <label class="label">Confirm Password</label>
                <input class="input"  id="passwordConfirm" type="password" placeholder="Password">
                <input class="button" type="submit" value="Reset Password">
            </form>
        </div>
        <div id="Success">

        </div>
        <script>
            $(function() {
              if(window.location.hash.substr(1)){
                $('#key').val(window.location.hash.substr(1));
              }
            });

            $('#reset').on('submit', function (e) {
                e.preventDefault();

                const key = $('#key')[0].value;
                const email = $('#email')[0].value;
                const password = $('#password')[0].value;
                const passwordConfirm = $('#passwordConfirm')[0].value;

                if(password != passwordConfirm){
                  failureAlert('Password do not match');
                } else {
                  $.post('/api/login/reset', {key:key, email:email, password:password}, function (data) {
                      successAlert('Success! Password has been updated', unlimited=true);
                  }).fail(function (data) {
                      console.log(data.responseJSON.message);
                      switch (data.responseJSON.message) {
                        case 'child "email" fails because ["email" is not allowed to be empty]':
                          failureAlert('Please Enter Email');
                          break;
                        case 'child "key" fails because ["key" is not allowed to be empty]':
                          failureAlert('Please Enter Key');
                          break;
                        case 'child "password" fails because ["password" is not allowed to be empty]':
                          failureAlert('Please Enter Password');
                          break;
                        default:
                          failureAlert(data.responseJSON.message);
                          break;
                      }
                  });
                }
            });

            function failureAlert(message) {
                $('#alert').text(message).removeClass('is-success').addClass('is-danger').css({opacity: 0, visibility: "visible"}).animate({opacity: 1}, 400);
            }

            function successAlert(message, unlimited=false) {
                $('#alert').text(message).removeClass('is-danger').addClass('is-success').css({opacity: 0, visibility: "visible"}).animate({opacity: 1}, 400);
                if (unlimited === false) {
                    window.setTimeout(function () {
                        $('#alert').css({opacity: 1.0, visibility: "visible"}).animate({opacity: 0}, 400);
                    }, 2500);
                }
            }
        </script>
    </div>
</section>
